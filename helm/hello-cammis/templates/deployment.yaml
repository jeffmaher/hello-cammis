apiVersion: apps/v1
kind: Deployment
metadata:

  name: {{.Values.global.helloCammis.name}}-deploy
  labels:
    app: {{.Values.global.helloCammis.name}}
spec:
  replicas: 3
  selector:
    matchLabels:
      app: {{.Values.global.helloCammis.name}}
  template:
    metadata:
      labels:
        app: {{.Values.global.helloCammis.name}}
    spec:
      containers:
        - name: {{.Values.global.helloCammis.name}}
          image: {{.Values.global.helloCammis.imageName}}:{{.Values.global.helloCammis.imageVersion}}
          ports:
            - containerPort: {{ .Values.global.helloCammis.containerPort }}
          env:
            - name: HELLO_CAMMIS_DATA_HOST
              {{ if .Values.global.helloCammisData }}
              value: '{{ index .Values.global.helloCammisData.name }}-service'
              {{ else }}
              value: "hello-cammis-data-service"
              {{ end }}
            - name: HELLO_CAMMIS_DATA_PORT
              {{ if .Values.global.helloCammisData }}
              value: '{{ .Values.global.helloCammisData.servicePort }}'
              {{ else }}
              value: "8000"
              {{ end }}
            - name: PORT
              value: "{{ .Values.global.helloCammis.containerPort }}"
      livenessProbe:
        initialDelaySeconds: 10
        periodSeconds: 60
        timeoutSeconds: 2
        failureThreshold: 5
        successThreshold: 1
        httpGet:
          path: /health
          port: {{ .Values.global.helloCammis.containerPort }}
      # readinessProbe:
      #   initialDelaySeconds: 10
      #   periodSeconds: 60
      #   timeoutSeconds: 2
      #   failureThreshold: 5
      #   successThreshold: 1
      #   httpGet:
      #     path: /ready
      #     port: {{ .Values.global.helloCammis.containerPort }}
